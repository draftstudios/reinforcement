<!--- 
<cfscript>

    R = {};

    start = function(global) { 
        function assert(condition, message) {
            if (!condition) {
                try {
                    message = message || "Assertion failed";
                } catch (any e) {
                    throw(message="Oops", detail="xyz"); 
                } finally { 
                    throw message; // Fallback
                }
            }
        }

      // Random numbers utils
      var return_v = false;
      var v_val = 0.0;
      var gaussRandom = function() {
        if(return_v) { 
          return_v = false;
          return v_val; 
        }
        var u = 2*rand()-1;
        var v = 2*rand()-1;
        var r = u*u + v*v;
        if(r == 0 || r > 1) return gaussRandom();
        var c = sqr(-2*log(r)/r);
        v_val = v*c; // cache this
        return_v = true;
        return u*c;
      }
      var randf = function(a, b) { return rand()*(b-a)+a; }
      var randi = function(a, b) { return floor(rand()*(b-a)+a); }
      var randn = function(mu, std){ return mu+gaussRandom()*std; }

      // helper function returns array of zeros of length n
      // and uses typed arrays if available
      var zeros = function(n) {
        if(isdefined(n) || !isnumeric(n)) { return []; }
        else {
            newArray = arrayNew(1);
            tmp = arraySet(newArray, 1, n, 0);
            return newArray;    
        }
      }

      // Mat holds a matrix
      var Mat = function(n,d) {
        // n is number of rows d is number of columns
        this.n = n;
        this.d = d;
        this.w = zeros(n * d);
        this.dw = zeros(n * d);

        this.get = function(row, col) { 
          // slow but careful accessor function
          // we want row-major order
          var ix = (this.d * row) + col;
          assert(ix >= 0 && ix < this.w.length);
          return this.w[ix];
        }

        this.set = function(row, col, v) {
          // slow but careful accessor function
          var ix = (this.d * row) + col;
          assert(ix >= 0 && ix < this.w.length);
          this.w[ix] = v; 
        }

        this.setFrom = function(arr) {
          var n = ArrayLen(arr);
          for(var i=1;i<=n;i++) {
            this.w[i] = arr[i]; 
          }
        }

        this.setColumn = function(m, i) {
          var n = ArrayLen(m.w);
          for(var q=1;q<=n;q++) {
            this.w[(this.d * q) + i] = m.w[q];
          }
        }

        this.toJSON = function() {
          var json = {};
          json['n'] = this.n;
          json['d'] = this.d;
          json['w'] = this.w;
          return SerializeJSON(json);
        }

        this.fromJSON = function(json) {
          var obj_json = DeserializeJSON(json);     
          this.n = obj_json.n;
          this.d = obj_json.d;
          this.w = zeros(this.n * this.d);
          this.dw = zeros(this.n * this.d);
          var n = this.n * this.d;
          for(var i=0;i<n;i++) {
            this.w[i] = obj_json.w[i]; // copy over weights
          }
        }

        return this;
      }

      var copyMat = function(b) {
        var a = Mat(b.n, b.d);
        a.setFrom(b.w);
        return a;
      }

      var copyNet = function(net) {
        // nets are (k,v) pairs with k = string key, v = Mat()
        var new_net = {};
        for(var p in net) {
          if(structkeyexists(net, p)){
            new_net[p] = copyMat(net[p]);
          }
        }
        return new_net;
      }

      var updateMat = function(m, alpha) {
        // updates in place
        var n = m.n * m.d;
        for(var i=0;i<n;i++) {
          if(m.dw[i] neq 0) {
            m.w[i] += - alpha * m.dw[i];
            m.dw[i] = 0;
          }
        }
      }

      var updateNet = function(net, alpha) {
        for(var p in net) {
          if(structkeyexists(net,p)){
            updateMat(net[p], alpha);
          }
        }
      }

      // various utils
      global.assert = assert;
      global.zeros = zeros;

      // classes
      global.Mat = Mat;

      // more utils
      global.copyMat = copyMat;
      global.copyNet = copyNet;
      global.updateMat = updateMat;
      global.updateNet = updateNet;
    };

    start(R);
    writeDump(R);
    writeDump(R.Mat(2,2));
    yoo = R.Mat(2,2);
    writeDump(yoo);

    yaa = R.Mat(3,3);
    writeOutput(yaa.toJSON());

    writeOutput(yoo.toJSON());
    

</cfscript>
--->

<cfscript>
spec = {}
spec.update = 'qlearn'; // qlearn | sarsa
spec.gamma = 0.9; // discount factor, [0, 1)
spec.epsilon = 0.2; // initial epsilon for epsilon-greedy policy, [0, 1)
spec.alpha = 0.005; // value function learning rate
spec.experience_add_every = 5; // number of time steps before we add another experience to replay memory
spec.experience_size = 10000; // size of experience
spec.learning_steps_per_iteration = 5;
spec.tderror_clamp = 1.0; // for robustness
spec.num_hidden_units = 100; // number of neurons in hidden layer

if (!isdefined("server.obj"))
{
  server.obj = new lib.cfreinforcerl();    
}

//obj = new lib.cfreinforce();    
//obj.out("123");    
//obj.assert(true,"233");
//writeDump(obj.Mat(2,2));
//test = obj.Mat(5,5);
//test2 = obj.copyMat(test);
//writedump(test2);
//writedump(test);

if (!isdefined("server.a")) {
  server.a = new lib.agent();
}
if (!isdefined("server.env")) {
  server.env = server.a;
}
if (!isdefined("server.a.brain")) {
  server.a.brain = server.obj.DQNAgent(server.env, spec);
}

/*
server.a.brain.fromJSON('{"NA":4,"NS":4,"NH":100,"NET":{"B2":"{\"d\":1,\"w\":[-0.015,-0.085,-0.015,-0.16973266906634682],\"n\":4}","W1":"{\"d\":4,\"w\":[-0.014569961604160225,-0.0073390641753605145,0.007287029376514248,-0.005921483349048813,0.007344013889501233,0.007240531250113729,0.005729132310021342,0.006337996691244085,-6.634419881493842E-4,-0.005253878393317557,0.0021393400262405015,-0.0024894203148188966,-0.008141692839941811,-0.0011340543173522745,0.0051681983660289785,-0.0038501970260960273,0.0011145994143899104,0.002434716149908182,0.009516940718357745,0.003354809556957615,-0.010384797772654473,-0.002615203382225868,0.017169808284084757,2.6107019611712164E-4,-0.004992008549021653,-0.012884426209122429,0.008646997065221356,-0.018303516840034752,-0.004866164582058836,-0.008416031910949471,0.0018907309714692217,-0.0026546497531503657,0.015654720791107544,0.0031351449989803944,0.01126449179414581,4.5570714437860767E-4,0.008394317484147075,0.0073772081010795255,0.003128826770286537,-0.0038673705705450697,3.3932277313514204E-4,4.578466259132995E-6,0.02247663341157186,-0.0011059421215777862,-0.010792513268694043,0.006548246614261476,0.0047215222139001065,-0.006287460107381658,0.00869741138903035,-0.01212621722899284,-0.005610044691553926,-0.004962864800427324,0.010556704233348145,-0.005503111737257078,-0.0016734610870553024,-0.009250264227295692,-0.004910099014806943,0.007555476611398215,0.002519963820809438,-0.015030619746197134,0.006137253203746787,-0.005245254673170287,0.02126914612475618,-0.002692860621451782,0.011552297370584119,0.0012973354435441573,-0.011429816645985889,-0.003960668612471313,0.002299506082682714,0.0031630155108906925,0.010685177590465526,0.005167455840125657,-0.003651177334697595,0.0023483759135251546,0.002364556731719593,0.005470530508356568,-0.0013141025885654342,-0.014556039053197094,-0.004633923670126068,0.00766625167031978,-0.0012040126201800531,0.002731915034416318,-0.012874120479162286,0.0036420684090019925,-0.00349950754236547,0.0188268573179259,0.02664853790710792,-0.0055253090566206855,0.012800527770173584,-0.005059843140312234,4.5909600108713297E-4,4.4312239529708457E-4,-0.011386190834284472,-0.0010429701220420948,0.010760805566970115,-9.630496348313941E-5,0.015228817112792767,0.014381032394237256,0.008673229252720722,-0.017448103180981684,0.012776764328635174,-0.011285566139922357,-0.007344210468519817,-0.013054834344598736,-0.0013883355930068583,-6.532164736976305E-5,-5.163424815886302E-4,0.007565493893144412,0.0106923538612565,-4.759160912914291E-4,-0.0032928795108905567,0.010274090689635312,-0.0029004092329325683,-0.0013129131674209146,0.020542087388366645,-0.004979843961173471,0.001468045721286404,-9.037109339158028E-4,0.008700047188898429,0.011118976914038467,-0.007212452178014727,-0.02759238497777102,-0.0011971145977621477,0.011335954856779983,0.0055065198263313415,0.0068975592855828605,-0.003556078950982493,-0.013226334751956833,0.008115371520404592,-0.004981498892114632,0.017034021323513174,0.009442338608253607,0.007688931350560051,-0.01785424384628827,-0.0019654568084546023,-0.00629634078569917,-0.004243018170456021,-0.004258770574445287,-0.014774733229967349,0.0036460006842527534,0.004721608356970617,0.018486750857980187,-0.0025840331787825082,0.002727496651101121,0.004964379583056364,-0.010103204915067283,5.480889939162652E-4,1.4540481648701737E-4,0.012494366510699819,0.0032481347726656547,-0.021019000031236693,0.006383001730981317,0.010088616671578204,0.0027856707716633704,0.0051276815047114925,0.006505732586805356,0.016401732986069548,-0.007526301201159983,0.005481058146565814,-0.015138447921197997,-0.017578484924486364,-0.018158948621027654,-0.010282729739102565,0.005262460311505711,-0.003065666837070707,-0.0022651550494096327,0.002393802172382856,-0.004354888573992961,0.013617045765193885,0.004407594371553351,0.008314808086294877,-0.022171505076927184,0.006253612464816468,0.01961111912110766,-0.017235910453142236,-0.013665153700922313,0.00248059383369096,-9.33193779023851E-4,0.01597845867193367,0.0036613424448112774,-0.00863750716975536,0.006991723494401147,-0.002942593007265531,-0.006461074874023384,-0.016691008322599198,0.003645637384311409,0.012300022712644434,0.0016949373058388084,0.004653644599169425,-0.010403965314805617,-0.0021090912526533436,0.005667705537389533,-0.012024409113702946,-0.0010657143772323818,0.005766947284844159,-0.011843094504961073,-0.0064610264638115976,0.004433300070723399,0.001863581690633131,-0.008208031744528098,0.00890143864362796,0.022527968509043546,-0.014665953625776301,0.008264201187295315,-0.004163705532249871,-0.0074690445727803745,-9.229525876823217E-4,-4.497450761647295E-6,-0.009101536681472962,2.3717638312905826E-4,0.006258505085979483,0.014835835150969525,0.007966848133761126,-0.013295050678613087,0.011173280486643383,-0.004561918816757256,-0.0060656298945510785,0.0012599127106454088,0.01136142654054515,0.008038586436077655,-0.0027057636217704423,-0.007645137792700864,-0.0029285425133006326,0.003195549108036173,-0.020043089677017432,0.016342829325220246,-0.0020767483331792062,0.005129748112286562,-0.0028536931364850637,-0.010751490375829965,-0.012428867266346602,-0.012626716360015774,0.002186947894498268,0.010669454110944086,-0.0021299632879633853,0.005617750032101837,-0.005988740930092697,0.018454214457388676,9.952072539578802E-4,0.009198774077524494,-0.0017005795133176477,0.01108651972529998,0.016086862721449914,-0.02126982104454771,-0.010395930628053654,-0.012473393466136198,0.003430848485322808,0.0022747194095035263,0.013448888850733368,0.01331062649008794,-0.003233132016138885,-0.008206873167023777,0.006231263911276195,0.003428243598759633,-0.008335239949164639,-0.009161100388785074,-0.011210695202626592,-0.0027493167152908313,-0.010655500404662389,-0.008660213436397076,-0.0015605761328223587,0.006981010528285534,-0.0014230262166166421,0.013432958775262634,-0.0036896318208054562,-0.004768470527025465,-0.011114113605108965,0.010462110513731571,0.008825393398031778,-5.992497689288011E-4,-0.006761217246296386,0.0024785753911865257,-0.014279258033764836,0.005655568067163496,0.016274808826544106,-0.0017454507149152487,-0.020447108178632586,0.009384693232886179,0.01947353243543402,0.013405211132267215,0.005119957693457625,-0.009903051617291622,0.008842703822110791,-0.0026086988549557898,7.731613611454589E-4,0.004589680216855398,-0.010325336445493676,-0.007095356957547498,-0.001914259306920561,0.0018369663894535395,0.005142935297895317,0.008985871685871791,-0.010767454206659286,-0.008629697114161809,0.004230933079893732,-0.012222754166765853,0.009621051024828908,-0.002492754708186368,0.004412908125146833,-0.005299650540428563,0.00439573188025201,-0.011598097265447084,-0.0018002155252773344,8.187098628461109E-4,0.00595504752603369,-0.010037993052444006,-0.0038142319945420385,-0.0015958763986119824,-0.01761238808800594,-0.007519826948247191,-0.015447915541303352,-0.0015973967892428532,-0.00957622140645835,0.005431745489512475,0.012938288256905803,1.7587705986006407E-4,0.0035308293857216734,0.014805919861936707,-0.005190088159037641,-0.00906923940908164,-0.008391934693555762,-0.0023501041460994806,0.03152081028617015,-0.004507500326974052,0.01836135996402166,0.003468052335681519,-0.015362372594403123,-0.0014197420663497663,0.016013150131499614,-0.010781750408274367,-3.573878770635504E-5,-0.0025581112734994094,-0.01667964089226369,-0.01235377738777687,-0.007883759050224594,0.008309231158163123,0.011950670373598758,0.005846577609433035,-0.0023543644924830325,0.0037623341320838838,0.0048138175421148085,-0.008511452710900553,0.00615428057547117,0.025900896730788218,-0.006805504222335756,0.003149441271312065,0.012927085247019514,-0.007392185603939878,-0.0050698819641642415,-6.584201551431654E-4,0.0022049670463425435,0.0036221725752274255,0.0055876959972790815,-0.015218659942521702,-0.00710003491679419,0.0023336025336085377,-0.008277579504833734,-0.008435540632850364,-0.01500269620264815,0.0020871231532747525,-0.002945118967043477,0.00427040879673212,-0.0025098347758080574,0.001806579081360428,-0.005325785633190545,-0.012679940553545493,0.0029414768217114634,0.0033416492215216993,0.012988708444621822,0.010314999419921254,0.005436340274715162,-0.0011563349103074576,0.007460516748401595,0.017358608110089033,-0.005475276891619715,0.005056132058533779,-0.00284788668363549,0.008817008998883267,0.005631374089235045,-0.0013619509847943695,0.0014625297743701437,0.0026054173290093042,-0.008380398991539353,-0.014041024540643045,-0.009041890806596982,-0.00763662737597797,0.010386128075847744,-0.014701520098144346,0.0021196014866722247,-0.007162440972919202,-0.012907527923147323,-0.014322807836571524,-0.00906325465244942,-0.005095651891915928,-0.0072706153600295975,0.003172926566504499,0.0040154140905544365,0.00835650308596172,-0.0030266656995496556,0.011310200134343544],\"n\":100}","W2":"{\"d\":100,\"w\":[7.38203583869018E-4,-0.008512329974703583,0.0021940533172452566,0.0010056192779284074,-0.011303896848272573,-0.0038038118610546545,0.006295359289130728,-8.42370571874169E-4,-7.787196420298472E-4,-0.009575961243233592,-0.03176560295297662,-0.008381066201429026,8.8830590028684E-4,0.006390470751295603,0.007199192626611445,4.070227090008428E-4,-0.029766961141966992,0.001608106779662444,0.01587874897246302,-0.012152289532141909,-0.004157825732263027,0.01837852900290837,0.004377758001233889,0.008450570297288868,-0.012213747002624007,-0.01715616833827843,-0.009633255285696654,-4.279838253124872E-4,0.009334713392213081,0.013715354525533501,-0.006765914031023553,-0.0020106234707694443,-0.009200690416250525,0.015448467146148611,0.02272553997568456,0.02041943203422927,0.004514976108907818,-2.1449523893591694E-4,-0.017667655062345695,0.0015876341628767057,0.00508704073462794,1.2983216777760087E-4,-0.0012511074190024961,-0.006616765520237989,0.0026826296199135443,-0.007314855007471123,0.00819758293797721,0.009219003842700324,-0.008317265155467626,0.018469047107648982,-0.01530263911708497,-0.009097900762458295,0.004386232529857226,0.0062664728112489165,-0.0057181980643061904,0.0023324936702326044,-0.008262430313671399,-0.01245016445918055,0.0011626810142968816,0.006655156697543561,-0.02045586773496693,-0.012807280688836324,0.005979577991098845,-6.244743912579932E-4,0.018347461525193128,-0.005957093799297176,-0.010230900293494766,0.00529716325959141,-0.005351091148577408,-0.005532773656193046,0.01857563588053124,-0.00404798924862496,-0.011319656147005934,-0.008958627781222132,-0.0027876943747382594,-0.007199427852456655,0.011178947925094235,0.009315906746503901,-0.005385064081522633,-2.234484260994237E-4,0.002112439018977725,0.012652394733895008,-0.016083449584080492,0.016711171985093122,0.0075718356404866315,-0.010074244150467397,0.0044995848165403935,0.004168984735591395,-0.013185770138074124,0.007663189772035839,0.008148452415191373,-0.01941682931864037,0.002307243910099282,0.0077733646228657135,0.005146133964676593,0.004545026051760436,-0.008388277350300198,-0.007866150581101874,2.4099178303284508E-4,0.010848983890228979,-0.008992688300869581,-0.0055381686888439485,-0.014092506113946654,0.0025328708646708445,-0.009283456456250805,0.0021972215774993297,-0.018558448800740174,0.006514703115948511,0.013102287247165627,-0.023678021535658015,-0.004005406073330839,0.0041574202197897335,0.00666979615711502,0.0024302571921468548,0.0029493617499129357,0.008861153585330147,-0.011427210437856003,-0.00850056832541592,-0.004769143298272011,0.002443231001021364,0.006368445863583118,0.0013026772368822444,-0.010505845764393895,-6.848441097742207E-4,-0.010953378393473946,-0.005186244435503707,-0.003453931897384935,0.0035706732842414003,0.009768950313477453,0.0011390700211324828,0.010098070517869595,-0.0021352354880643572,0.010867216350130753,-0.007273752090654298,-0.007319817475592734,0.0038463137078331724,-0.01879940687109325,-0.007955433437387232,0.005204868027493799,-0.009965927544780978,0.023113868718952744,-0.004665749086081974,2.881277891244882E-4,0.016253500278872852,9.328839677202272E-4,0.0027702619988964204,0.011679699725638388,0.008756972911487857,0.015264072476233364,3.427950097965357E-4,-0.005534680989686553,-0.0032439160296710004,0.004681425856063468,-0.006365786206133205,0.006863400604589522,-0.0021486623411433882,0.006522375961540432,0.004615530166877307,-0.007034311899075155,0.014434412696444694,-0.0021670757055248816,0.005193671801482197,6.349142293614337E-4,0.006476545230771162,-0.0010141757849607715,-0.006922701773411345,0.008374439959169427,-0.014308579194943856,0.0046433778943386315,-0.004069606309416882,-0.01070783733080706,3.9477410201808064E-4,-0.010460752071323862,-0.007447694219023698,-0.007942200128127255,-0.003998513702806899,-8.757558418395532E-4,0.0011932787862712058,0.009010925708709266,0.011372530906630374,0.006232937968577251,-0.016992285384477314,-0.011976556069944754,-0.0187637496312695,-0.01623124950563664,-0.003731511275607042,0.010186807903068567,-0.014743563545353328,-0.02674707598075976,-0.006310822357053451,0.006412189910370764,0.0056154032817294286,-0.015629677204581582,0.004190832751902983,-0.020892108966651102,0.0122478001886798,-0.002018973757954202,-0.014289955424938557,0.0019428508368688352,0.011325530975348884,-0.011103078641049785,-0.00776898129171294,-0.018139629110096898,-0.006643589833281607,-0.023634027367433183,-0.022462606715347087,0.0124715575178427,0.0018134226761511902,-7.323494163544734E-4,-7.699849709351603E-4,0.015365234782968688,0.009384681543334716,-0.002237138008402202,0.0016562639527326075,0.009225735719522872,0.003021115086990051,0.001014872757431205,-0.022612934815389958,-0.0024202616632969954,-0.0029195358967705003,-0.003028147368518194,0.011475926704137723,-0.003468962080639055,-0.0034558459248093354,0.0013659295625551837,-0.019270575923306107,-0.004639977779972948,0.003772582928881264,-0.01717093632547514,0.003872930541912715,0.009010042269435378,8.01477141857013E-4,-0.007836849512587533,-0.007590117146531453,0.0022010098254716805,-0.004608849401056572,-0.004444255928387565,0.005356971715486677,-0.023739381291615333,0.006942149979437696,0.011506396123308591,0.020472052831228136,-0.00530622881664183,-0.005544177302846828,-0.011370510744398333,0.006366690832699589,-0.002736088447820415,-0.020129635738509743,0.00789216673042949,0.008545353570865988,0.015377810108897556,-0.006718005792749777,-8.45708476416514E-4,-1.6440677087303654E-4,-0.019409300760779426,0.0020663390836580483,-0.016210662810106143,-0.0198229126645144,0.008291689796127065,0.006698205081865994,-0.009916000008362659,0.01299461817641261,0.00310444877896217,-0.0043113681310318385,0.009054562758861273,-0.005845560673166062,0.0053843886973973295,-9.912553226917114E-4,-0.010648508658220313,-0.010482377961498337,0.013937925965074672,0.008689989718354075,0.009479160789430915,-0.004909760245858627,-0.006005675791094841,-0.002005097303514173,-0.008544153935635403,-0.006957090979171738,-0.008726535584417631,0.010945243620576056,4.8537141169732934E-4,0.003894875326315145,-0.002082681448011796,-0.0012138752084229043,-0.013360615179741017,-0.001169974026804316,-0.016192672823812208,0.011413320801377013,0.0015473476753018838,0.02316708213833552,-0.0011283023301767517,-0.005329408073930892,0.008673689200721642,-3.2598753654772657E-4,-0.0025569525107478003,-0.02673158061254342,0.023739964111672035,-2.3482456020949532E-4,-0.0019530714895347474,0.012260174960558565,0.027853840143333936,0.007156114277817562,-0.005271457051495973,-0.006029918978582406,-0.010364356903076258,0.006346231687646925,-0.014630511930421352,0.015233046071542945,-0.004826253696854577,-0.006221484640930568,0.005704423779502247,-0.017092427913095752,0.004924464399786771,0.01699361090004662,0.006196441844636432,0.004333575339779711,-9.941173694735547E-4,0.001248402497743571,-0.014554499672356759,-5.508129838978613E-4,-0.007984361191125298,0.004803543611444119,-0.006197006915649331,0.004504192869025327,-0.007620934159151117,-0.006207673594386437,-0.0012127081815883167,0.002710341802530963,0.005272731577304749,-0.0060643286312410775,-0.015145717974905338,-0.016291886186431757,0.016157919416352747,0.001153670623134768,0.011185420986823454,0.00756028923798361,0.007600600260967729,-0.008616381458313812,0.02600568191954211,-0.010687916706807663,-0.0036701007125462108,-0.008925203620464424,-0.02127739122904747,-0.01073505646874232,0.007893848810124813,0.014962578100700053,0.02769575161786946,-0.0010878991609133647,-0.004625856955121225,-0.00862432556679511,-0.019472075893490585,0.0034270923155288965,-0.01530719228009459,-0.017452617330695697,-0.020380398560343974,-0.008735793288741907,-0.0010001627152368107,-0.006660086795813108,-0.0030051941061664308,0.002131450695771259,-0.0018906370459208623,-0.012531556505636369,0.005119624381242399,-0.011829224965089176,0.0015823190137179484,-0.001959011171488611,0.009547276503372502,-0.012167613588981684,-0.006916573867213947,1.1292124272700244E-7,-0.0011910281195868177,-0.004720585740084293,0.006197146269195158,-0.010030002311119503,-0.009340405181035303,0.0038513672448322743,-0.004906834525852964,-1.5729903765739024E-4,0.004493986363167506,2.3491903199943285E-4,-0.015146241277240026,-0.005706808886027586,-0.0032203518124163688,0.009798840297161517,-0.017472672618585164,0.0020929760647773496,-2.87550122287488E-4,0.0020874941704219874,0.0011349774621740147,-6.172707255863182E-4,-8.510641744016109E-4,-0.00603248367860647,-0.002907617524875504,-0.02454563736822779,0.005959026979752101,-0.004586485111063916,-4.8259805197182554E-4,0.0033667168070048966,0.0037726281551771486,0.0030768097519705048],\"n\":4}","B1":"{\"d\":1,\"w\":[-0.003496712321140429,-6.263471625637766E-4,0.0023420333283465477,0.0010361615201325133,0.00304095878759561,-6.697852322349932E-4,0.0038626008137999253,-0.003046154867720106,-5.762392718079197E-4,0.0030683808086717306,-3.775112962510352E-4,0.0027124283703422866,-0.0015420687306283674,-0.0033888536662399003,-0.001449834429530877,-0.0016530459822266688,0.0013590022329405922,7.86044175089368E-4,0.0027254423628063104,1.349501328315242E-4,9.316132644087441E-4,-0.0013025343245566866,0.0016873522443032602,-5.624582516351945E-4,0.0020969172079804256,0.0017947708951998084,7.393395377587092E-4,-0.001011658074155771,-0.0015522388422299588,6.330680949624909E-4,0.0017915759060843032,0.0028423517072298002,-0.003547000255751474,1.6400489636205049E-4,-0.0015542994659883006,-0.0019287052018834908,2.3046746253506736E-4,0.0018201188088027174,-0.004394693420610981,0.002216621020921912,-0.00127428086281572,0.0016520393612716722,0.0034027283988742707,4.8566560262544865E-4,-0.0013266741430513396,-0.002580773568353602,-0.005432067665055575,-4.897023395864238E-4,-2.91824178569247E-4,0.0011396735330779374,0.003586798431955911,1.4622987979062E-5,0.0022962548979719934,0.0032430744040845157,0.0033368805610556186,0.0016401419904221767,3.529051479533625E-4,0.0012644536197558604,9.248539683918929E-4,-0.0016796626915754013,9.909049260341748E-4,0.0018607785207769986,-0.0013046753026719497,0.0013969444100157195,-3.808515526910541E-4,0.0011273165867249342,-0.0021813330613384484,0.003041765194983479,0.0012753768903556097,9.697208876342839E-4,5.320254331070809E-4,6.782351393083178E-4,-8.634100141337498E-5,0.002735264690013744,0.0022031915113615106,-2.5162901004948486E-4,7.495665655921157E-4,2.1827882272234465E-4,-0.0011360702091017826,-0.00123702817280423,0.0021376725799951714,0.0018199737616512504,0.001537899845477213,3.090461184432486E-5,0.004191413633917879,4.472585611455616E-5,-5.198885774581146E-4,7.693254105490404E-4,0.002163380235140869,3.369274470725193E-4,-4.546587107560571E-4,0.0010078776219173593,0.0014170474328411597,0.003525845074586828,7.944371391765246E-4,3.0200993888440216E-5,1.94654229992995E-4,7.351708259144083E-4,-6.062230124425766E-4,-0.0019069053177810306],\"n\":100}"}}');
*/

server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
server.a.forward();
server.a.backward();
//writeDump(server.a);
//writeDump(server.a.brain.toJSON());

</cfscript>